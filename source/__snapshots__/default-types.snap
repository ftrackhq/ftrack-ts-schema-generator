// :copyright: Copyright (c) 2023 ftrack

// Generated on 2023-02-01T00:00:00.000Z using schema
// from an instance running version 4.13.8 using server on https://ftrack.example.com
// Not intended to modify manually

export interface TypedContext<
  K extends TypedContextSubtype = TypedContextSubtype
> {
  __entity_type__?: K;
  __permissions?: Record<string, any>;
}
export interface BasicLink {
  id: string;
  type: string;
  name: string;
}
declare module "@ftrack/api" {
  export interface EntityTypeMap {
    TypedContext: TypedContext;
  }
}
export interface TypedContextSubtypeMap {
  TypedContext: TypedContext;
}
export type TypedContextSubtype = keyof TypedContextSubtypeMap;
export function getAttributeConfigurations() {
  return [] as const;
}

export type RuntimeCustomAttributeConfiguration = ReturnType<
  typeof getAttributeConfigurations
>[number];
export type RuntimeCustomAttributeConfigurationName =
  RuntimeCustomAttributeConfiguration["name"];
export type RuntimeCustomAttributeConfigurationLabel =
  RuntimeCustomAttributeConfiguration["label"];

export function getTypes() {
  return [
    {
      name: "Concept Art",
      isBillable: true,
    },
    {
      name: "Modeling",
      isBillable: true,
    },
    {
      name: "Rigging",
      isBillable: true,
    },
    {
      name: "Texture",
      isBillable: true,
    },
    {
      name: "Lookdev",
      isBillable: true,
    },
    {
      name: "Character",
      isBillable: true,
    },
    {
      name: "Prop",
      isBillable: true,
    },
    {
      name: "Furniture",
      isBillable: false,
    },
    {
      name: "Vehicle",
      isBillable: true,
    },
    {
      name: "Environment",
      isBillable: true,
    },
    {
      name: "Matte Painting",
      isBillable: true,
    },
    {
      name: "Production",
      isBillable: false,
    },
    {
      name: "Editing",
      isBillable: true,
    },
    {
      name: "Conform",
      isBillable: true,
    },
    {
      name: "Tracking",
      isBillable: true,
    },
    {
      name: "Rotoscoping",
      isBillable: true,
    },
    {
      name: "Previz",
      isBillable: true,
    },
    {
      name: "Layout",
      isBillable: true,
    },
    {
      name: "Animation",
      isBillable: true,
    },
    {
      name: "FX",
      isBillable: true,
    },
    {
      name: "Lighting",
      isBillable: true,
    },
    {
      name: "Rendering",
      isBillable: true,
    },
    {
      name: "Compositing",
      isBillable: true,
    },
    {
      name: "Deliverable",
      isBillable: true,
    },
  ] as const;
}

export type RuntimeType = ReturnType<typeof getTypes>[number];
export type RuntimeTypeName = RuntimeType["name"];

export function getObjectTypes() {
  return [] as const;
}

export type RuntimeObjectType = ReturnType<typeof getObjectTypes>[number];
export type RuntimeObjectTypeName = RuntimeObjectType["name"];

export function getProjectSchemas() {
  return [] as const;
}

export type RuntimeProjectSchema = ReturnType<typeof getProjectSchemas>[number];
export type RuntimeProjectSchemaName = RuntimeProjectSchema["name"];

// Errors:
